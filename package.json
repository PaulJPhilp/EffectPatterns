{
  "type": "module",
  "name": "effect-patterns-hub",
  "version": "0.4.0",
  "private": true,
  "description": "A community-driven knowledge base for Effect-TS patterns.",
  "workspaces": [
    "apps/*",
    "packages/*",
    "services/*"
  ],
  "bin": {
    "ep": "./scripts/ep.ts"
  },
  "scripts": {
    "ep": "bun run scripts/ep.ts",
    "publish": "bun run scripts/publish/publish.ts",
    "validate": "bun run scripts/publish/validate-improved.ts",
    "validate:simple": "bun run scripts/publish/validate.ts",
    "generate": "bun run scripts/publish/generate.ts",
    "test": "bun run scripts/publish/test-improved.ts",
    "test:simple": "bun run scripts/publish/test.ts",
    "test:behavioral": "bun run scripts/publish/test-behavioral.ts",
    "test:integration": "bun run scripts/publish/test-integration.ts",
    "test:all": "bun run test && bun run test:behavioral && bun run test:integration",
    "lint": "ultracite check api agents/analyzer cli packages services scripts server content/src",
    "lint:fix": "ultracite fix .",
    "lint:effect": "bun run scripts/publish/lint-effect-patterns.ts",
    "lint:all": "bun run lint && bun run lint:effect",
    "rules": "bun run scripts/publish/rules-improved.ts",
    "rules:simple": "bun run scripts/publish/rules.ts",
    "rules:claude": "bun run scripts/publish/generate-claude-rules.ts",
    "ingest": "bun run scripts/ingest/ingest-pipeline-improved.ts",
    "ingest:old": "bun run scripts/ingest/process.ts",
    "ingest:discord": "bun run scripts/ingest-discord.ts",
    "analyze": "bun run agents/analyzer.ts",
    "pipeline": "bun run scripts/publish/pipeline.ts",
    "all": "bun run pipeline",
    "lint:examples": "eslint \"content/src/**/*.ts\"",
    "typecheck:examples": "tsc --noEmit",
    "typecheck": "tsc --noEmit --strict",
    "ai": "effect-ai",
    "ai:help": "effect-ai --help",
    "ai:version": "effect-ai --version",
    "test:scripts": "vitest run scripts",
    "test:scripts:watch": "vitest scripts",
    "test:scripts:ui": "vitest --ui scripts",
    "qa:process": "./scripts/qa/qa-process.sh",
    "qa:report": "bun run scripts/qa/qa-report.ts",
    "qa:repair": "bun run scripts/qa/qa-repair.ts",
    "qa:status": "bun run scripts/qa/qa-status.ts",
    "qa:repair:dry": "bun run scripts/qa/qa-repair.ts --dry-run",
    "qa:all": "./scripts/qa/qa-process.sh && bun run qa:report",
    "qa:test": "bun run scripts/qa/test-enhanced-qa.ts",
    "server:dev": "bun --watch server/index.ts",
    "test:server": "vitest run server",
    "test:cli": "vitest run scripts/__tests__/ep-cli.test.ts scripts/ep-rules-add.test.ts",
    "test:e2e": "vitest run scripts/integration.test.ts",
    "test:api": "vitest run server scripts/ep-rules-add.test.ts scripts/integration.test.ts",
    "toolkit:build": "bun --filter @effect-patterns/toolkit run build",
    "toolkit:test": "bun --filter @effect-patterns/toolkit run test",
    "toolkit:build:schemas": "bun --filter @effect-patterns/toolkit run build:schemas",
    "mcp:dev": "bun --filter @effect-patterns/mcp-server run dev",
    "mcp:build": "bun --filter @effect-patterns/mcp-server run build",
    "mcp:test": "bun --filter @effect-patterns/mcp-server run test",
    "mcp:test:integration": "bun --filter @effect-patterns/mcp-server run test:integration",
    "chat:dev": "bun --filter @effect-patterns/chat-app run dev",
    "chat:build": "bun --filter @effect-patterns/chat-app run build",
    "chat:preview": "bun --filter @effect-patterns/chat-app run preview",
    "app:build:openapi": "bun run app/server/utils/openapiEmitter.ts",
    "test:app": "vitest run app",
    "generate:readme": "npx tsx scripts/generate_readme_by_skill_usecase.ts"
  },
  "dependencies": {
    "@anthropic-ai/claude-code": "^2.0.20",
    "@effect/ai": "^0.25.2",
    "@effect/ai-anthropic": "^0.15.1",
    "@effect/ai-google": "^0.4.0",
    "@effect/ai-openai": "^0.28.2",
    "@effect/cli": "^0.69.2",
    "@effect/platform": "^0.90.10",
    "@effect/platform-node": "^0.98.3",
    "@opentelemetry/api": "^1.9.0",
    "@opentelemetry/exporter-metrics-otlp-http": "^0.206.0",
    "@opentelemetry/exporter-metrics-otlp-proto": "^0.203.0",
    "@opentelemetry/exporter-trace-otlp-http": "^0.203.0",
    "@opentelemetry/exporter-trace-otlp-proto": "^0.206.0",
    "@opentelemetry/resources": "^2.1.0",
    "@opentelemetry/sdk-metrics": "^2.1.0",
    "@opentelemetry/sdk-node": "^0.203.0",
    "@opentelemetry/sdk-trace-node": "^2.1.0",
    "@opentelemetry/semantic-conventions": "^1.37.0",
    "conventional-commits-parser": "^6.2.0",
    "conventional-recommended-bump": "^11.2.0",
    "dotenv": "^17.2.3",
    "effect": "^3.18.4",
    "effect-mdx": "^0.2.2",
    "glob": "^11.0.3",
    "gray-matter": "^4.0.3",
    "js-yaml": "^4.1.0",
    "liquidjs": "^10.22.0",
    "next": "15.5.5",
    "ora": "^9.0.0",
    "react": "19.2.0",
    "react-dom": "19.2.0",
    "semver": "^7.7.3",
    "vercel": "^48.4.0",
    "yaml": "^2.8.1"
  },
  "devDependencies": {
    "@biomejs/biome": "^2.2.6",
    "@effect/language-service": "^0.31.2",
    "@types/bun": "^1.3.0",
    "@types/node": "^22.10.5",
    "@types/semver": "^7.7.1",
    "@typescript-eslint/eslint-plugin": "^8.46.1",
    "@typescript-eslint/parser": "^8.46.1",
    "@vercel/node": "^5.4.0",
    "@vitest/coverage-v8": "^3.2.4",
    "effect-ai-cli": "^0.1.3",
    "eslint": "^9.37.0",
    "tsx": "^4.20.6",
    "turbo": "^2.5.8",
    "typescript": "5.8.3",
    "ultracite": "5.6.2",
    "vitest": "^3.2.4"
  },
  "keywords": [
    "effect",
    "effect-ts",
    "typescript",
    "patterns"
  ],
  "author": "Paul",
  "license": "MIT",
  "overrides": {
    "@effect/rpc": "^0.65.2"
  },
  "resolutions": {
    "@effect/platform": "^0.90.10",
    "@effect/platform-node": "^0.98.3",
    "effect": "^3.18.4"
  }
}
